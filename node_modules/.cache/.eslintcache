[{"/Users/giliardi/Documents/Projetos/monitoramento-dcsc/src/index.tsx":"1","/Users/giliardi/Documents/Projetos/monitoramento-dcsc/src/reportWebVitals.ts":"2","/Users/giliardi/Documents/Projetos/monitoramento-dcsc/src/App.tsx":"3"},{"size":611,"mtime":1696873014534,"results":"4","hashOfConfig":"5"},{"size":425,"mtime":1696856358888,"results":"6","hashOfConfig":"5"},{"size":25798,"mtime":1696873419038,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8kkpsv",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"/Users/giliardi/Documents/Projetos/monitoramento-dcsc/src/index.tsx",[],[],"/Users/giliardi/Documents/Projetos/monitoramento-dcsc/src/reportWebVitals.ts",[],[],["19"],"/Users/giliardi/Documents/Projetos/monitoramento-dcsc/src/App.tsx",["20","21","22","23","24"],[],"import React, { useCallback, useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { gql, useQuery } from '@apollo/client';\nimport axios from 'axios';\nimport Chart from \"chart.js/auto\";\nimport { CategoryScale } from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\n\nChart.register(CategoryScale);\n\nenum TipoEstacao {\n  HIDRO = \"Hidro\",\n  METEO = \"Meteo\",\n  PLUVIO = \"Pluvio\",\n  BARRAGEM = \"Barragem\",\n}\n\ntype Estacao = {\n  nome?: string;\n  tipo?: TipoEstacao;\n  codigo?: string;\n  last_read?: string;\n  nivel_rio?: number;\n\n  nivel_rio_historico?: Array<{ t_stamp: string; nivel: number }>;\n\n  chuva_001h?: number;\n  chuva_003h?: number;\n  chuva_006h?: number;\n  chuva_012h?: number;\n  chuva_024h?: number;\n  chuva_048h?: number;\n  chuva_072h?: number;\n  chuva_096h?: number;\n  chuva_120h?: number;\n  chuva_144h?: number;\n  chuva_168h?: number;\n\n  temp_atual?: number;\n  temp_sens?: number;\n  umidade?: number;\n\n  vel_vento?: number;\n  dir_vento?: number;\n  pres_atmos?: number;\n\n  localizacao?: {\n    lat: number;\n    lng: number;\n  };\n\n  nivel_montante?: number;\n  nivel_jusante?: number;\n  porc_reservatorio?: number;\n  comp_abertas?: number;\n  comp_fechadas?: number;\n};\n\ntype Data = {\n  local: string,\n  labels: string[],\n  data: number[]\n}\n\n\nfunction App() {\n  const [estacoes, setEstacao] = useState<Estacao[]>([])\n  const [itajai, setItajai] = useState<Data[]>([])\n  const [labelsBrusque, setLabelsBrusque] = useState<string[]>([])\n  const [dataBrusque, setDataBrusque] = useState<number[]>([])\n  const [labelsBlumenau, setLabelsBlumenau] = useState<string[]>([])\n  const [dataBlumenau, setDataBlumenau] = useState<number[]>([])\n  const [isMobile, setIsMobile] = useState(false)\n\n  const handleResize = () => {\n    if (window.innerWidth < 1000) {\n      setIsMobile(true)\n    } else {\n      setIsMobile(false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResize)\n  }, [window])\n\n  async function getApiBlumenau() {\n    const listLabel: string[] = []\n    const listData: number[] = []\n    const response = await axios.get(\"https://api.itajai.sc.gov.br/enchente/rios-blumenau\", {})\n    response.data.niveis.forEach((item: { nivel: number, horaLeitura: string }) => {\n      const date = `${new Date(item.horaLeitura).getDate() < 10 ? '0' + new Date(item.horaLeitura).getDate() : new Date(item.horaLeitura).getDate()}/${new Date(item.horaLeitura).getMonth() < 10 ? '0' + new Date(item.horaLeitura).getMonth() : new Date(item.horaLeitura).getMonth()} - ${new Date(item.horaLeitura).getHours() < 10 ? '0' + new Date(item.horaLeitura).getHours() : new Date(item.horaLeitura).getHours()}:${new Date(item.horaLeitura).getMinutes() < 10 ? '0' + new Date(item.horaLeitura).getMinutes() : new Date(item.horaLeitura).getMinutes()}`\n      listLabel.push(date)\n      listData.push(item.nivel)\n    })\n    setLabelsBlumenau(listLabel)\n    setDataBlumenau(listData)\n  }\n\n  async function getApiItajaiDC02() {\n    const listLabel: string[] = []\n    const listData: number[] = []\n    const response = await axios.get(\"https://intranet2.itajai.sc.gov.br/defesa-civil/api/telemetria?dc=DC02\", {})\n    response.data.forEach((item: { rio: number, datahora: string }) => {\n      const date = `${new Date(item.datahora).getDate() < 10 ? '0' + new Date(item.datahora).getDate() : new Date(item.datahora).getDate()}/${new Date(item.datahora).getMonth() < 10 ? '0' + new Date(item.datahora).getMonth() : new Date(item.datahora).getMonth()} - ${new Date(item.datahora).getHours() < 10 ? '0' + new Date(item.datahora).getHours() : new Date(item.datahora).getHours()}:${new Date(item.datahora).getMinutes() < 10 ? '0' + new Date(item.datahora).getMinutes() : new Date(item.datahora).getMinutes()}`\n      listLabel.push(date)\n      listData.push(item.rio)\n    })\n    const data: Data = {\n      local: 'ItajaiDC02',\n      labels: listLabel,\n      data: listData\n    }\n\n    return data\n  }\n\n  async function getApiItajaiDC07() {\n    const listLabel: string[] = []\n    const listData: number[] = []\n    const response = await axios.get(\"https://intranet2.itajai.sc.gov.br/defesa-civil/api/telemetria?dc=DC07\", {})\n    response.data.forEach((item: { rio: number, datahora: string }) => {\n      const date = `${new Date(item.datahora).getDate() < 10 ? '0' + new Date(item.datahora).getDate() : new Date(item.datahora).getDate()}/${new Date(item.datahora).getMonth() < 10 ? '0' + new Date(item.datahora).getMonth() : new Date(item.datahora).getMonth()} - ${new Date(item.datahora).getHours() < 10 ? '0' + new Date(item.datahora).getHours() : new Date(item.datahora).getHours()}:${new Date(item.datahora).getMinutes() < 10 ? '0' + new Date(item.datahora).getMinutes() : new Date(item.datahora).getMinutes()}`\n      listLabel.push(date)\n      listData.push(item.rio)\n    })\n    const data: Data = {\n      local: 'ItajaiDC07',\n      labels: listLabel,\n      data: listData\n    }\n\n    return data\n  }\n\n  async function getApiItajaiDC03() {\n    const listLabel: string[] = []\n    const listData: number[] = []\n    const response = await axios.get(\"https://intranet2.itajai.sc.gov.br/defesa-civil/api/telemetria?dc=DC03\", {})\n    response.data.forEach((item: { rio: number, datahora: string }) => {\n      const date = `${new Date(item.datahora).getDate() < 10 ? '0' + new Date(item.datahora).getDate() : new Date(item.datahora).getDate()}/${new Date(item.datahora).getMonth() < 10 ? '0' + new Date(item.datahora).getMonth() : new Date(item.datahora).getMonth()} - ${new Date(item.datahora).getHours() < 10 ? '0' + new Date(item.datahora).getHours() : new Date(item.datahora).getHours()}:${new Date(item.datahora).getMinutes() < 10 ? '0' + new Date(item.datahora).getMinutes() : new Date(item.datahora).getMinutes()}`\n      listLabel.push(date)\n      listData.push(item.rio)\n    })\n    const data: Data = {\n      local: 'ItajaiDC03',\n      labels: listLabel,\n      data: listData\n    }\n\n    return data\n  }\n\n  async function getApiItajaiDC05() {\n    const listLabel: string[] = []\n    const listData: number[] = []\n    const response = await axios.get(\"https://intranet2.itajai.sc.gov.br/defesa-civil/api/telemetria?dc=DC05\", {})\n    response.data.forEach((item: { rio: number, datahora: string }) => {\n      const date = `${new Date(item.datahora).getDate() < 10 ? '0' + new Date(item.datahora).getDate() : new Date(item.datahora).getDate()}/${new Date(item.datahora).getMonth() < 10 ? '0' + new Date(item.datahora).getMonth() : new Date(item.datahora).getMonth()} - ${new Date(item.datahora).getHours() < 10 ? '0' + new Date(item.datahora).getHours() : new Date(item.datahora).getHours()}:${new Date(item.datahora).getMinutes() < 10 ? '0' + new Date(item.datahora).getMinutes() : new Date(item.datahora).getMinutes()}`\n      listLabel.push(date)\n      listData.push(item.rio)\n    })\n    const data: Data = {\n      local: 'ItajaiDC05',\n      labels: listLabel,\n      data: listData\n    }\n\n    return data\n  }\n\n  async function getApiItajaiDC06() {\n    const listLabel: string[] = []\n    const listData: number[] = []\n    const response = await axios.get(\"https://intranet2.itajai.sc.gov.br/defesa-civil/api/telemetria?dc=DC06\", {})\n    response.data.forEach((item: { rio: number, datahora: string }) => {\n      const date = `${new Date(item.datahora).getDate() < 10 ? '0' + new Date(item.datahora).getDate() : new Date(item.datahora).getDate()}/${new Date(item.datahora).getMonth() < 10 ? '0' + new Date(item.datahora).getMonth() : new Date(item.datahora).getMonth()} - ${new Date(item.datahora).getHours() < 10 ? '0' + new Date(item.datahora).getHours() : new Date(item.datahora).getHours()}:${new Date(item.datahora).getMinutes() < 10 ? '0' + new Date(item.datahora).getMinutes() : new Date(item.datahora).getMinutes()}`\n      listLabel.push(date)\n      listData.push(item.rio)\n    })\n    const data: Data = {\n      local: 'ItajaiDC06',\n      labels: listLabel,\n      data: listData\n    }\n\n    return data\n  }\n\n\n  async function getApiItajai() {\n    const dc02 = await getApiItajaiDC02()\n    const dc03 = await getApiItajaiDC03()\n    const dc05 = await getApiItajaiDC05()\n    const dc06 = await getApiItajaiDC06()\n    const dc07 = await getApiItajaiDC07()\n\n    setItajai([dc02, dc03, dc05, dc06, dc07])\n  }\n\n  const GET_ESTACOES = gql`\n  query ListaEstacoes {\n    estacoes {\n      nome\n      codigo\n      tipo\n      last_read\n\n      localizacao {\n        lat\n        lng\n      }\n\n      nivel_rio\n      nivel_rio_historico {\n        t_stamp\n        nivel\n      }\n\n      chuva_001h\n      chuva_003h\n      chuva_006h\n      chuva_012h\n      chuva_024h\n      chuva_048h\n      chuva_072h\n      chuva_096h\n      chuva_120h\n      chuva_144h\n      chuva_168h\n\n      temp_atual\n      temp_sens\n      umidade\n      vel_vento\n      dir_vento\n      pres_atmos\n\n      nivel_montante\n      nivel_jusante\n      porc_reservatorio\n      comp_abertas\n      comp_fechadas\n    }\n  }\n`;\n\n  const updateEstacoes = (\n    (data: { estacoes: Estacao[] }) => {\n      setEstacao(data.estacoes)\n    }\n  );\n\n  useQuery(GET_ESTACOES, {\n    onError: () => { },\n    onCompleted: updateEstacoes,\n    fetchPolicy: \"network-only\",\n  });\n\n\n  useEffect(() => {\n    setTimeout(function(){\n      window.location.reload();\n   }, 300000);\n    getApiBlumenau()\n    getApiItajai()\n    if (estacoes.length > 0) {\n      const listLabel: string[] = []\n      const listData: number[] = []\n      const brusqueData = estacoes.filter((item) => item.nome == \"DCSC Brusque\")\n      brusqueData[0].nivel_rio_historico?.forEach((item) => {\n        const date = `${new Date(item.t_stamp).getDate() < 10 ? '0' + new Date(item.t_stamp).getDate() : new Date(item.t_stamp).getDate()}/${new Date(item.t_stamp).getMonth() < 10 ? '0' + new Date(item.t_stamp).getMonth() : new Date(item.t_stamp).getMonth()} - ${new Date(item.t_stamp).getHours() < 10 ? '0' + new Date(item.t_stamp).getHours() : new Date(item.t_stamp).getHours()}:${new Date(item.t_stamp).getMinutes() < 10 ? '0' + new Date(item.t_stamp).getMinutes() : new Date(item.t_stamp).getMinutes()}`\n        listLabel.push(date)\n        listData.push(item.nivel)\n      })\n      setLabelsBrusque(listLabel)\n      setDataBrusque(listData)\n    }\n  }, [estacoes])\n\n  if (isMobile) {\n    return (\n      <div className=\"App\">\n\n        <Line\n         style={{border: '5px solid green', alignItems:'center', justifyContent:'center', padding:10}}\n          options={{\n            scales: {\n              y: {\n                min: 0,\n                max: 14,\n                border: {\n                  display: false\n                },\n                grid: {\n                  color: function (context) {\n                    if (context.tick.value === 6.0) {\n                      return 'red';\n                    }\n                    return '#e5e5e5';\n                  },\n                },\n              }\n            }\n          }}\n          data={{\n            labels: labelsBrusque,\n            datasets: [\n              {\n                data: dataBrusque,\n                label: \"Nivel Brusque (Atualizado à cada hora) - Fonte: Defesa Civil SC\"\n              }\n            ]\n          }} />\n\n        <Line\n         style={{border: '5px solid blue', alignItems:'center', justifyContent:'center', padding:10}}\n          options={{\n            scales: {\n              y: {\n                min: 0,\n                max: 14,\n                border: {\n                  display: false\n                },\n                grid: {\n                  color: function (context) {\n                    if (context.tick.value === 8.0) {\n                      return 'red';\n                    }\n                    return '#e5e5e5';\n                  },\n                },\n              }\n            }\n          }}\n          data={{\n            labels: labelsBlumenau,\n            datasets: [\n              {\n                data: dataBlumenau,\n                label: \"Nivel Rio Itajaí-Açu - Blumenau (Atualizado à cada hora) - Fonte: AlertaBlu\"\n              },\n            ],\n          }} />\n\n        {\n          itajai.length > 0 &&\n          <>\n\n            <Line\n         style={{border: '5px solid #e5e5e5', alignItems:'center', justifyContent:'center', padding:10}}\n              options={{\n                scales: {\n                  y: {\n                    min: 0,\n                    max: 5,\n                    border: {\n                      display: false\n                    },\n                    grid: {\n                      color: function (context) {\n                        if (context.tick.value === 3.5) {\n                          return 'red';\n                        }\n                        return '#e5e5e5';\n                      },\n                    },\n                  }\n                }\n              }}\n              data={{\n                labels: itajai[0].labels,\n                datasets: [\n                  {\n                    data: itajai[0].data,\n                    label: \"Nivel Rio Itajaí-Açu - Itajaí (Praça Celso Pereira da Silva) (Atualizado à cada 10 minutos )\"\n                  },\n                ],\n              }} />\n\n            <Line\n         style={{border: '5px solid #e5e5e5', alignItems:'center', justifyContent:'center', padding:10}}\n              options={{\n                scales: {\n                  y: {\n                    min: 0,\n                    max: 5,\n                    border: {\n                      display: false\n                    },\n                    grid: {\n                      color: function (context) {\n                        if (context.tick.value === 2.5) {\n                          return 'red';\n                        }\n                        return '#e5e5e5';\n                      },\n                    },\n                  }\n                }\n              }}\n              data={{\n                labels: itajai[1].labels,\n                datasets: [\n                  {\n                    data: itajai[1].data,\n                    label: \"Nivel Rio Itajaí-Mirim - Itajaí (Atualizado à cada 10 minutos ) - Fonte: Captação SEMASA\"\n                  },\n                ],\n              }} />\n            <Line\n         style={{border: '5px solid #e5e5e5', alignItems:'center', justifyContent:'center', padding:10}}\n              options={{\n                scales: {\n                  y: {\n                    min: 0,\n                    max: 5,\n                    border: {\n                      display: false\n                    },\n                    grid: {\n                      color: function (context) {\n                        if (context.tick.value === 2.5) {\n                          return 'red';\n                        }\n                        return '#e5e5e5';\n                      },\n                    },\n                  }\n                }\n              }}\n              data={{\n                labels: itajai[2].labels,\n                datasets: [\n                  {\n                    data: itajai[2].data,\n                    label: \"Nivel Rio Itajaí-Mirim - Itajaí (Curso antigo - Propriedade Privada) (Atualizado à cada 10 minutos ) - Fonte: Defesa Civíl Itajaí\"\n                  },\n                ],\n              }} />\n            <Line\n         style={{border: '5px solid #e5e5e5', alignItems:'center', justifyContent:'center', padding:10}}\n              options={{\n                scales: {\n                  y: {\n                    min: 0,\n                    max: 10,\n                    border: {\n                      display: false\n                    },\n                    grid: {\n                      color: function (context) {\n                        if (context.tick.value === 1.25) {\n                          return 'red';\n                        }\n                        return '#e5e5e5';\n                      },\n                    },\n                  }\n                }\n              }}\n              data={{\n                labels: itajai[3].labels,\n                datasets: [\n                  {\n                    data: itajai[3].data,\n                    label: \"Nivel Rio Itajaí-Mirim - Itajaí (Itamirim Clube de Campo) (Atualizado à cada 10 minutos )\"\n                  },\n                ],\n              }} />\n            <Line\n         style={{border: '5px solid #e5e5e5', alignItems:'center', justifyContent:'center', padding:10}}\n              options={{\n                scales: {\n                  y: {\n                    min: 0,\n                    max: 5,\n                    border: {\n                      display: false\n                    },\n                    grid: {\n                      color: function (context) {\n                        if (context.tick.value === 2.5) {\n                          return 'red';\n                        }\n                        return '#e5e5e5';\n                      },\n                    },\n                  }\n                }\n              }}\n              data={{\n                labels: itajai[3].labels,\n                datasets: [\n                  {\n                    data: itajai[3].data,\n                    label: \"Nivel Ribeirão da Murta - Itajaí (Portal) (Atualizado à cada 10 minutos ) - Fonte: Defesa Civíl Itajaí\"\n                  },\n                ],\n              }} />\n          </>\n        }\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-around', width: '100%' }}>\n        <div style={{ display: 'flex', width: '49%',border: '5px solid green', alignItems:'center', justifyContent:'center', padding:10 }}>\n          <Line\n            options={{\n              scales: {\n                y: {\n                  min: 0,\n                  max: 14,\n                  border: {\n                    display: false\n                  },\n                  grid: {\n                    color: function (context) {\n                      if (context.tick.value === 6.0) {\n                        return 'red';\n                      }\n                      return '#e5e5e5';\n                    },\n                  },\n                }\n              }\n            }}\n            data={{\n              labels: labelsBrusque,\n              datasets: [\n                {\n                  data: dataBrusque,\n                  label: \"Nivel Brusque (Atualizado à cada hora) - Fonte: Defesa Civil SC\"\n                }\n              ]\n            }} />\n        </div>\n        <div style={{ display: 'flex', width: '49%',border: '5px solid blue', alignItems:'center', justifyContent:'center', padding:10  }}>\n          <Line\n            options={{\n              scales: {\n                y: {\n                  min: 0,\n                  max: 14,\n                  border: {\n                    display: false\n                  },\n                  grid: {\n                    color: function (context) {\n                      if (context.tick.value === 8.0) {\n                        return 'red';\n                      }\n                      return '#e5e5e5';\n                    },\n                  },\n                }\n              }\n            }}\n            data={{\n              labels: labelsBlumenau,\n              datasets: [\n                {\n                  data: dataBlumenau,\n                  label: \"Nivel Rio Itajaí-Açu - Blumenau (Atualizado à cada hora) - Fonte: AlertaBlu\"\n                },\n              ],\n            }} />\n        </div>\n      </div>\n      {\n        itajai.length > 0 &&\n        <>\n          <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-around', width: '100%' }}>\n            <div style={{ display: 'flex', width: '49%',border: '5px solid #e5e5e5', alignItems:'center', justifyContent:'center', padding:10  }}>\n              <Line\n                options={{\n                  scales: {\n                    y: {\n                      min: 0,\n                      max: 5,\n                      border: {\n                        display: false\n                      },\n                      grid: {\n                        color: function (context) {\n                          if (context.tick.value === 3.5) {\n                            return 'red';\n                          }\n                          return '#e5e5e5';\n                        },\n                      },\n                    }\n                  }\n                }}\n                data={{\n                  labels: itajai[0].labels,\n                  datasets: [\n                    {\n                      data: itajai[0].data,\n                      label: \"Nivel Rio Itajaí-Açu - Itajaí (Praça Celso Pereira da Silva) (Atualizado à cada 10 minutos )\"\n                    },\n                  ],\n                }} />\n            </div>\n            <div style={{ display: 'flex', width: '49%',border: '5px solid #e5e5e5', alignItems:'center', justifyContent:'center', padding:10  }}>\n              <Line\n                options={{\n                  scales: {\n                    y: {\n                      min: 0,\n                      max: 5,\n                      border: {\n                        display: false\n                      },\n                      grid: {\n                        color: function (context) {\n                          if (context.tick.value === 2.5) {\n                            return 'red';\n                          }\n                          return '#e5e5e5';\n                        },\n                      },\n                    }\n                  }\n                }}\n                data={{\n                  labels: itajai[1].labels,\n                  datasets: [\n                    {\n                      data: itajai[1].data,\n                      label: \"Nivel Rio Itajaí-Mirim - Itajaí (Atualizado à cada 10 minutos ) - Fonte: Captação SEMASA\"\n                    },\n                  ],\n                }} />\n            </div>\n          </div>\n          <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-around', width: '100%' }}>\n            <div style={{ display: 'flex', width: '49%',border: '5px solid #e5e5e5', alignItems:'center', justifyContent:'center', padding:10  }}>\n              <Line\n                options={{\n                  scales: {\n                    y: {\n                      min: 0,\n                      max: 5,\n                      border: {\n                        display: false\n                      },\n                      grid: {\n                        color: function (context) {\n                          if (context.tick.value === 2.5) {\n                            return 'red';\n                          }\n                          return '#e5e5e5';\n                        },\n                      },\n                    }\n                  }\n                }}\n                data={{\n                  labels: itajai[2].labels,\n                  datasets: [\n                    {\n                      data: itajai[2].data,\n                      label: \"Nivel Rio Itajaí-Mirim - Itajaí (Curso antigo - Propriedade Privada) (Atualizado à cada 10 minutos ) - Fonte: Defesa Civíl Itajaí\"\n                    },\n                  ],\n                }} />\n            </div>\n            <div style={{ display: 'flex', width: '49%',border: '5px solid #e5e5e5', alignItems:'center', justifyContent:'center', padding:10  }}>\n              <Line\n                options={{\n                  scales: {\n                    y: {\n                      min: 0,\n                      max: 5,\n                      border: {\n                        display: false\n                      },\n                      grid: {\n                        \n                        color: function (context) {\n                          if (context.tick.value === 1.5) {\n                            \n                            return 'red';\n                          }\n                          return '#e5e5e5';\n                        },\n                      },\n                    }\n                  }\n                }}\n                data={{\n                  labels: itajai[3].labels,\n                  datasets: [\n                    {\n                      data: itajai[3].data,\n                      label: \"Nivel Rio Itajaí-Mirim - Itajaí (Itamirim Clube de Campo) (Atualizado à cada 10 minutos )\"\n                    },\n                  ],\n                }} />\n            </div>\n          </div>\n          <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-around', width: '100%' }}>\n            <div style={{ display: 'flex', width: '100%',border: '5px solid #e5e5e5', alignItems:'center', justifyContent:'center', padding:10  }}>\n              <Line\n                options={{\n                  scales: {\n                    y: {\n                      min: 0,\n                      max: 5,\n                      border: {\n                        display: false\n                      },\n                      grid: {\n                        color: function (context) {\n                          if (context.tick.value === 2.5) {\n                            return 'red';\n                          }\n                          return '#e5e5e5';\n                        },\n                      },\n                    }\n                  }\n                }}\n                data={{\n                  labels: itajai[3].labels,\n                  datasets: [\n                    {\n                      data: itajai[3].data,\n                      label: \"Nivel Ribeirão da Murta - Itajaí (Portal) (Atualizado à cada 10 minutos ) - Fonte: Defesa Civíl Itajaí\"\n                    },\n                  ],\n                }} />\n            </div>\n          </div>\n        </>\n      }\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":1,"column":17,"nodeType":"29","messageId":"30","endLine":1,"endColumn":28},{"ruleId":"27","severity":1,"message":"31","line":2,"column":8,"nodeType":"29","messageId":"30","endLine":2,"endColumn":12},{"ruleId":"32","severity":1,"message":"33","line":86,"column":6,"nodeType":"34","endLine":86,"endColumn":14,"suggestions":"35"},{"ruleId":"36","severity":1,"message":"37","line":271,"column":63,"nodeType":"38","messageId":"39","endLine":271,"endColumn":65},{"ruleId":"32","severity":1,"message":"40","line":280,"column":6,"nodeType":"34","endLine":280,"endColumn":16,"suggestions":"41"},"no-new-object",["42"],"@typescript-eslint/no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'window'. Either exclude it or remove the dependency array. Outer scope values like 'window' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["43"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'getApiItajai'. Either include it or remove the dependency array.",["44"],"no-object-constructor",{"desc":"45","fix":"46"},{"desc":"47","fix":"48"},"Update the dependencies array to be: []",{"range":"49","text":"50"},"Update the dependencies array to be: [estacoes, getApiItajai]",{"range":"51","text":"52"},[1948,1956],"[]",[10177,10187],"[estacoes, getApiItajai]"]