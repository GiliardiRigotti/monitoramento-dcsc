{"ast":null,"code":"var _jsxFileName = \"/home/gti/Documentos/monitoramento/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { gql } from '@apollo/client';\nimport Chart from \"chart.js/auto\";\nimport { CategoryScale } from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(CategoryScale);\nexport let TipoEstacao = /*#__PURE__*/function (TipoEstacao) {\n  TipoEstacao[\"HIDRO\"] = \"Hidro\";\n  TipoEstacao[\"METEO\"] = \"Meteo\";\n  TipoEstacao[\"PLUVIO\"] = \"Pluvio\";\n  TipoEstacao[\"BARRAGEM\"] = \"Barragem\";\n  return TipoEstacao;\n}({});\nfunction App() {\n  _s();\n  const [estacoes, setEstacao] = useState([]);\n  const [labels, setLabels] = useState([]);\n  const [data, setData] = useState([]);\n  async function getDataBlumenau() {\n    //const mathRandom = Math.ceil(Math.random() * 9999999)\n    //const response = await apiBlumenau.get(\"/static/data/nivel_oficial.json?a=7192054\",{headers:{\n    //  'Access-Control-Allow-Origin' : '*',\n    //  'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n    //}})\n\n    //const response = await axios.get(`http://alertablu.blumenau.sc.gov.br/static/data/nivel_oficial.json`,{headers:{\n    //  'Access-Control-Allow-Origin' : '*',\n    //  'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n    //}\n    //})\n    //console.log(response.data)\n  }\n  const GET_ESTACOES = gql`\n  query ListaEstacoes {\n    estacoes {\n      nome\n      codigo\n      tipo\n      last_read\n\n      localizacao {\n        lat\n        lng\n      }\n\n      nivel_rio\n      nivel_rio_historico {\n        t_stamp\n        nivel\n      }\n\n      chuva_001h\n      chuva_003h\n      chuva_006h\n      chuva_012h\n      chuva_024h\n      chuva_048h\n      chuva_072h\n      chuva_096h\n      chuva_120h\n      chuva_144h\n      chuva_168h\n\n      temp_atual\n      temp_sens\n      umidade\n      vel_vento\n      dir_vento\n      pres_atmos\n\n      nivel_montante\n      nivel_jusante\n      porc_reservatorio\n      comp_abertas\n      comp_fechadas\n    }\n  }\n`;\n  const updateEstacoes = response => {\n    var _brusqueData$0$nivel_;\n    const brusqueData = response.estacoes.filter(item => item.nome == \"DCSC Brusque\");\n    (_brusqueData$0$nivel_ = brusqueData[0].nivel_rio_historico) === null || _brusqueData$0$nivel_ === void 0 ? void 0 : _brusqueData$0$nivel_.forEach(item => {\n      const date = `${new Date(item.t_stamp).getDate() < 10 ? '0' + new Date(item.t_stamp).getDate() : new Date(item.t_stamp).getDate()}/${new Date(item.t_stamp).getMonth() < 10 ? '0' + new Date(item.t_stamp).getMonth() : new Date(item.t_stamp).getMonth()} - ${new Date(item.t_stamp).getHours() < 10 ? '0' + new Date(item.t_stamp).getHours() : new Date(item.t_stamp).getHours()}:${new Date(item.t_stamp).getMinutes() < 10 ? '0' + new Date(item.t_stamp).getMinutes() : new Date(item.t_stamp).getMinutes()}`;\n      labels.push(date);\n      data.push(item.nivel);\n    });\n  };\n  useEffect(() => {\n    if (estacoes.length > 0) {\n      var _brusqueData$0$nivel_2;\n      const brusqueData = estacoes.filter(item => item.nome == \"DCSC Brusque\");\n      (_brusqueData$0$nivel_2 = brusqueData[0].nivel_rio_historico) === null || _brusqueData$0$nivel_2 === void 0 ? void 0 : _brusqueData$0$nivel_2.forEach(item => {\n        const date = `${new Date(item.t_stamp).getDate() < 10 ? '0' + new Date(item.t_stamp).getDate() : new Date(item.t_stamp).getDate()}/${new Date(item.t_stamp).getMonth() < 10 ? '0' + new Date(item.t_stamp).getMonth() : new Date(item.t_stamp).getMonth()} - ${new Date(item.t_stamp).getHours() < 10 ? '0' + new Date(item.t_stamp).getHours() : new Date(item.t_stamp).getHours()}:${new Date(item.t_stamp).getMinutes() < 10 ? '0' + new Date(item.t_stamp).getMinutes() : new Date(item.t_stamp).getMinutes()}`;\n        labels.push(date);\n        data.push(item.nivel);\n      });\n    }\n  }, [estacoes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: data.length > 0 && /*#__PURE__*/_jsxDEV(Line, {\n      data: {\n        labels: labels,\n        datasets: [{\n          data: data,\n          label: \"Nivel Brusque\"\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ycQt9o2v+9nDQDQX5oDO8DdbQXs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","gql","Chart","CategoryScale","Line","jsxDEV","_jsxDEV","register","TipoEstacao","App","_s","estacoes","setEstacao","labels","setLabels","data","setData","getDataBlumenau","GET_ESTACOES","updateEstacoes","response","_brusqueData$0$nivel_","brusqueData","filter","item","nome","nivel_rio_historico","forEach","date","Date","t_stamp","getDate","getMonth","getHours","getMinutes","push","nivel","length","_brusqueData$0$nivel_2","className","children","datasets","label","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/gti/Documentos/monitoramento/src/App.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { gql, useQuery } from '@apollo/client';\nimport axios from 'axios';\nimport { apiBlumenau } from './services/api';\nimport Chart from \"chart.js/auto\";\nimport { CategoryScale } from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\n\nChart.register(CategoryScale);\n\nexport enum TipoEstacao {\n  HIDRO = \"Hidro\",\n  METEO = \"Meteo\",\n  PLUVIO = \"Pluvio\",\n  BARRAGEM = \"Barragem\",\n}\n\nexport type Estacao = {\n  nome?: string;\n  tipo?: TipoEstacao;\n  codigo?: string;\n  last_read?: string;\n  nivel_rio?: number;\n\n  nivel_rio_historico?: Array<{ t_stamp: string; nivel: number }>;\n\n  chuva_001h?: number;\n  chuva_003h?: number;\n  chuva_006h?: number;\n  chuva_012h?: number;\n  chuva_024h?: number;\n  chuva_048h?: number;\n  chuva_072h?: number;\n  chuva_096h?: number;\n  chuva_120h?: number;\n  chuva_144h?: number;\n  chuva_168h?: number;\n\n  temp_atual?: number;\n  temp_sens?: number;\n  umidade?: number;\n\n  vel_vento?: number;\n  dir_vento?: number;\n  pres_atmos?: number;\n\n  localizacao?: {\n    lat: number;\n    lng: number;\n  };\n\n  nivel_montante?: number;\n  nivel_jusante?: number;\n  porc_reservatorio?: number;\n  comp_abertas?: number;\n  comp_fechadas?: number;\n};\n\nfunction App() {\n  const [estacoes, setEstacao] = useState<Estacao[]>([])\n  const [labels, setLabels] = useState<string[]>([])\n  const [data, setData] = useState<number[]>([])\n  async function getDataBlumenau() {\n    //const mathRandom = Math.ceil(Math.random() * 9999999)\n    //const response = await apiBlumenau.get(\"/static/data/nivel_oficial.json?a=7192054\",{headers:{\n    //  'Access-Control-Allow-Origin' : '*',\n    //  'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n    //}})\n    \n    //const response = await axios.get(`http://alertablu.blumenau.sc.gov.br/static/data/nivel_oficial.json`,{headers:{\n    //  'Access-Control-Allow-Origin' : '*',\n    //  'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n    //}\n  //})\n    //console.log(response.data)\n  }\n\n  const GET_ESTACOES = gql`\n  query ListaEstacoes {\n    estacoes {\n      nome\n      codigo\n      tipo\n      last_read\n\n      localizacao {\n        lat\n        lng\n      }\n\n      nivel_rio\n      nivel_rio_historico {\n        t_stamp\n        nivel\n      }\n\n      chuva_001h\n      chuva_003h\n      chuva_006h\n      chuva_012h\n      chuva_024h\n      chuva_048h\n      chuva_072h\n      chuva_096h\n      chuva_120h\n      chuva_144h\n      chuva_168h\n\n      temp_atual\n      temp_sens\n      umidade\n      vel_vento\n      dir_vento\n      pres_atmos\n\n      nivel_montante\n      nivel_jusante\n      porc_reservatorio\n      comp_abertas\n      comp_fechadas\n    }\n  }\n`;\n\n  const updateEstacoes = (\n    (response: { estacoes: Estacao[] }) => {\n      const brusqueData = response.estacoes.filter((item)=> item.nome == \"DCSC Brusque\")\n      brusqueData[0].nivel_rio_historico?.forEach((item)=>{\n        const date = `${new Date(item.t_stamp).getDate() < 10? '0'+new Date(item.t_stamp).getDate():new Date(item.t_stamp).getDate()}/${new Date(item.t_stamp).getMonth() < 10? '0'+new Date(item.t_stamp).getMonth():new Date(item.t_stamp).getMonth()} - ${new Date(item.t_stamp).getHours()<10?'0'+new Date(item.t_stamp).getHours():new Date(item.t_stamp).getHours()}:${new Date(item.t_stamp).getMinutes()<10? '0'+new Date(item.t_stamp).getMinutes():new Date(item.t_stamp).getMinutes()}`\n          labels.push(date)\n          data.push(item.nivel)\n      })\n\n    }\n  );\n\n\n\n\n  useEffect(() => {\n    if(estacoes.length > 0){\n\n      const brusqueData = estacoes.filter((item)=> item.nome == \"DCSC Brusque\")\n      brusqueData[0].nivel_rio_historico?.forEach((item)=>{\n        const date = `${new Date(item.t_stamp).getDate() < 10? '0'+new Date(item.t_stamp).getDate():new Date(item.t_stamp).getDate()}/${new Date(item.t_stamp).getMonth() < 10? '0'+new Date(item.t_stamp).getMonth():new Date(item.t_stamp).getMonth()} - ${new Date(item.t_stamp).getHours()<10?'0'+new Date(item.t_stamp).getHours():new Date(item.t_stamp).getHours()}:${new Date(item.t_stamp).getMinutes()<10? '0'+new Date(item.t_stamp).getMinutes():new Date(item.t_stamp).getMinutes()}`\n          labels.push(date)\n          data.push(item.nivel)\n      })\n    }\n  }, [estacoes])\n\n\n  return (\n    <div className=\"App\">\n      {\n        data.length > 0 &&\n        <Line data={{\n        labels: labels,\n        datasets:[\n          {\n            data: data,\n            label:\"Nivel Brusque\"\n          }\n        ]\n      }}/>\n      }\n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}